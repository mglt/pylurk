[2022-01-25 20:59:09,172 : lurk.py:67 -                serve() ] 'tag'
[2022-01-25 21:10:39,744 : lurk.py:70 -                serve() ] 'tag'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 62, in serve
    return LURKMessage.build( resp )
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 336, in build
    self.build_stream(obj, stream, **contextkw)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 348, in build_stream
    self._build(obj, stream, context, "(building)")
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 2144, in _build
    buildret = sc._build(subobj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 2657, in _build
    return self.subcon._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 4715, in _build
    buildret = self.subcon._build(obj, stream2, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 3924, in _build
    return sc._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 3924, in _build
    return sc._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 3924, in _build
    return sc._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 2139, in _build
    subobj = obj[sc.name] # raises KeyError
KeyError: 'tag'
[2022-01-25 21:12:48,241 : lurk.py:71 -                serve() ] 'tag'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 63, in serve
    return LURKMessage.build( resp )
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 336, in build
    self.build_stream(obj, stream, **contextkw)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 348, in build_stream
    self._build(obj, stream, context, "(building)")
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 2144, in _build
    buildret = sc._build(subobj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 2657, in _build
    return self.subcon._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 4715, in _build
    buildret = self.subcon._build(obj, stream2, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 3924, in _build
    return sc._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 3924, in _build
    return sc._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 3924, in _build
    return sc._build(obj, stream, context, path)
  File "/home/emigdan/.local/lib/python3.8/site-packages/construct/core.py", line 2139, in _build
    subobj = obj[sc.name] # raises KeyError
KeyError: 'tag'
[2022-01-25 21:14:50,195 : lurk.py:71 -                serve() ] 'Tls13Ext' object has no attribute 'payload'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload( req )
AttributeError: 'Tls13Ext' object has no attribute 'payload'
[2022-01-25 21:18:51,673 : lurk.py:74 -                serve() ] 'Tls13Ext' object has no attribute 'payload'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload( req )
AttributeError: 'Tls13Ext' object has no attribute 'payload'
[2022-01-25 21:35:22,571 : lurk.py:73 -                serve() ] name 'payload_req' is not defined
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2172, in payload_resp
    payload  = session.serve( payload_req, mtype, 'request')
NameError: name 'payload_req' is not defined
[2022-01-25 21:44:04,658 : lurk.py:73 -                serve() ] name 'mtype' is not defined
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2177, in payload_resp
    elif mtype == 's_hand_and_app_secret':
NameError: name 'mtype' is not defined
[2022-01-25 21:46:52,455 : lurk.py:73 -                serve() ] name 'mtype' is not defined
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2177, in payload_resp
    elif mtype == 's_hand_and_app_secret':
NameError: name 'mtype' is not defined
[2022-01-25 21:48:30,846 : lurk.py:73 -                serve() ] name 'mtype' is not defined
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2177, in payload_resp
    elif mtype == 's_hand_and_app_secret':
NameError: name 'mtype' is not defined
[2022-01-25 21:51:42,160 : lurk.py:73 -                serve() ] name 'mtype' is not defined
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2177, in payload_resp
    elif mtype == 's_hand_and_app_secret':
NameError: name 'mtype' is not defined
[2022-02-01 13:20:23,823 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2352, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1687, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1578, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:23:04,451 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2352, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1687, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1578, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:28:04,425 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2352, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1687, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1578, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:29:35,146 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2354, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1689, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1579, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:32:07,039 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2355, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1690, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1579, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:32:42,388 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2355, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1690, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1580, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:35:43,529 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2356, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1691, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1581, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-01 13:36:07,926 : lurk.py:73 -                serve() ] 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2356, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1691, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1581, in __init__
    self.session_ticket = SessionTicket( self.conf, \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1358, in __init__
    self.read_ticket( psk_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1380, in read_ticket
    self.tls_hash = self.tls_hash_from_cipher( self.cipher )
AttributeError: 'SessionTicket' object has no attribute 'tls_hash_from_cipher'
[2022-02-02 16:48:29,537 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2441, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1783, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1678, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1496, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:33:30,056 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2441, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1783, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1678, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1496, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:40:18,602 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2442, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1784, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1678, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1496, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:41:15,478 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2443, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1785, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1679, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1496, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:43:59,308 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2445, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1787, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1681, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1497, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:47:08,029 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2445, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1787, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1681, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1497, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:48:17,834 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2446, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1788, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1682, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1498, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:49:02,616 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2447, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1789, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1683, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1499, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1309, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 09:52:36,057 : lurk.py:73 -                serve() ] list index out of range
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2448, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1790, in serve
    resp = req.resp()
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1684, in resp
    self.scheduler.process( self.secret_request.of([ 'b', 'e_c', 'e_x' ] ), self.handshake )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1500, in process
    transcript_h = handshake.transcript_hash( 'e' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1310, in transcript_hash
    self.transcript = Hash( self.get_tls_hash() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1273, in get_tls_hash
    sig_scheme = SigScheme( self.get_cipher_suite() )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1266, in get_cipher_suite
    self.cipher_suite = self.msg_list[ ch_index + 1 ][ 'data' ][ 'cipher_suite' ]
IndexError: list index out of range
[2022-02-03 12:22:08,605 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1387, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', "Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, 'server_hello'), data=Container(legacy_version=b'\\x03\\x03', random=b'\\x15@\\x01X\\xa0\\x8e\\x01\\x91\\xb0\\xa4\\x89\\xa8\\x95+\\xee\\x15=J\\x84y\\xfc\\xe8\\x9e\\xe8w\\xf9\\x16N\\x17\\x83\\xe0l', cipher_suite=uEnumIntegerString.new(b'\\x13\\x01', 'TLS_AES_128_GCM_SHA256'), legacy_compression_method=b'\\x00', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')]))), Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, 'supported_groups'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b'\\x00\\x17', 'secp256r1'), EnumIntegerString.new(b'\\x00\\x18', 'secp384r1'), EnumIntegerString.new(b'\\x00\\x1d', 'x25519'), EnumIntegerString.new(b'\\x00\\x1e', 'x448')]))), Container(extension_type=uEnumIntegerString.new(41, 'pre_shared_key'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, 'key_share'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b'\\x00\\x1e', 'x448'), key_exchange=b'\\xf8xgW\\x81\\x0f\\xa2:\\x1c\\xa2\\xf4\\xd0\\xb5\\xc51^w\\xa5/:\\xcd\\x95\\x1e~\\xbd\\x92\\x97\\xd6#1v\\xcbm\\xa0$\\xfb\\xa2m\\x82\\x94\\x9f\\x1b\\xd5\\x04\\xec\\xd5w\\xcd\\x9e\\x07\\xe8\\xdd,\\xf2L\\xd1')))]))), Container(msg_type=uEnumIntegerString.new(8, 'encrypted_extensions'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))]))), Container(msg_type=uEnumIntegerString.new(13, 'certificate_request'), data=Container(certificate_request_context=b'\\x00\\x01', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))])))]")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2498, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1827, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1740, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 997, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1396, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 12:23:40,659 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1388, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', 'Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, \'server_hello\'), data=Container(legacy_version=b\'\\x03\\x03\', random=b"D\\xff\\xdch\\xe1\\xe5\\x12\'ba1~\\xc5\\xd2\'\\xbd<\\xf8\\xf8\\xa1\\x7f\\x1bY\\xdd\\xd8\\xf8\\xa0\\xdf3|\\xd9\\xcf", cipher_suite=uEnumIntegerString.new(b\'\\x13\\x01\', \'TLS_AES_128_GCM_SHA256\'), legacy_compression_method=b\'\\x00\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')]))), Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, \'supported_groups\'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b\'\\x00\\x17\', \'secp256r1\'), EnumIntegerString.new(b\'\\x00\\x18\', \'secp384r1\'), EnumIntegerString.new(b\'\\x00\\x1d\', \'x25519\'), EnumIntegerString.new(b\'\\x00\\x1e\', \'x448\')]))), Container(extension_type=uEnumIntegerString.new(41, \'pre_shared_key\'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, \'key_share\'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b\'\\x00\\x1e\', \'x448\'), key_exchange=b\'\\xa5]\\xbd\\x02VtT\\xf0\\xc3\\\\\\xf6\\x9dg\\xf8C\\x07\\xea\\xe4g\\xab\\x998\\xc9w\\xad&g?\\x14\\xb3\\xa6\\xb8~"\\xd4\\xa7\\x80\\xa8V\\x0f6W@\\x84_\\x17\\xd9\\x0ev\\xe5\\xcbF\\xcc\\x16O\\xd2\')))]))), Container(msg_type=uEnumIntegerString.new(8, \'encrypted_extensions\'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))]))), Container(msg_type=uEnumIntegerString.new(13, \'certificate_request\'), data=Container(certificate_request_context=b\'\\x00\\x01\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))])))]')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2499, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1828, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1741, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 998, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1397, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 12:26:01,345 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1389, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', "Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, 'server_hello'), data=Container(legacy_version=b'\\x03\\x03', random=b'\\xf5\\xee\\xe1\\xb0\\xb8A/\\xe3\\xd6\\xb2\\x1f\\x12\\xe0t\\xd0\\xb5\\xc6\\xc7\\xb5\\xda(48\\xfa\\xf3\\x7f\\xcb\\xf3\\x82\\\\\\xf5\\x8d', cipher_suite=uEnumIntegerString.new(b'\\x13\\x01', 'TLS_AES_128_GCM_SHA256'), legacy_compression_method=b'\\x00', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')]))), Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, 'supported_groups'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b'\\x00\\x17', 'secp256r1'), EnumIntegerString.new(b'\\x00\\x18', 'secp384r1'), EnumIntegerString.new(b'\\x00\\x1d', 'x25519'), EnumIntegerString.new(b'\\x00\\x1e', 'x448')]))), Container(extension_type=uEnumIntegerString.new(41, 'pre_shared_key'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, 'key_share'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b'\\x00\\x1e', 'x448'), key_exchange=b':\\xd75\\x0f\\x0b(\\xddgS\\xe0\\xa1~\\x02\\xbcn\\xa5O\\xbf\\x07\\x14\\xae\\xc6m\\xb4\\xf0\\x08h\\xf9n\\xdf\\xad1\\x06b\\x02(I\\x1e\\xa5\\x18U\\xeem\\xb5\\x15\\xaduV|C[r\\x83h\\x14\\xf0')))]))), Container(msg_type=uEnumIntegerString.new(8, 'encrypted_extensions'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))]))), Container(msg_type=uEnumIntegerString.new(13, 'certificate_request'), data=Container(certificate_request_context=b'\\x00\\x01', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))])))]")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2500, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1829, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1742, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 998, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1398, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 12:27:12,084 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1390, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', "Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, 'server_hello'), data=Container(legacy_version=b'\\x03\\x03', random=b'\\x07\\xbb/\\xdc\\xcb\\xa6\\xdd\\x83z:4\\xc4.\\x8f\\xc1\\xdc\\xf3\\x15\\xe1\\x17\\x89z f\\nQ\\xa9\\xf166\\xc8F', cipher_suite=uEnumIntegerString.new(b'\\x13\\x01', 'TLS_AES_128_GCM_SHA256'), legacy_compression_method=b'\\x00', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')]))), Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, 'supported_groups'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b'\\x00\\x17', 'secp256r1'), EnumIntegerString.new(b'\\x00\\x18', 'secp384r1'), EnumIntegerString.new(b'\\x00\\x1d', 'x25519'), EnumIntegerString.new(b'\\x00\\x1e', 'x448')]))), Container(extension_type=uEnumIntegerString.new(41, 'pre_shared_key'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, 'key_share'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b'\\x00\\x1e', 'x448'), key_exchange=b'Jj\\x07\\x97#i\\x0c+\\x14yJGm\\x0e?\\xd2\\xb8\\xb3\\xd9\\x0f\\xebR\\xe0\\x11\\x1a\\xef\\xe2\\xff4\\x9a\\xf5\\xd7\\x8bN(\\xabS\\x021\\xd6\\xba\\xedl\\xd372\\xa9 3\\n\\xeb]\\xd3Kc\\x06')))]))), Container(msg_type=uEnumIntegerString.new(8, 'encrypted_extensions'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))]))), Container(msg_type=uEnumIntegerString.new(13, 'certificate_request'), data=Container(certificate_request_context=b'\\x00\\x01', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))])))]")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2501, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1830, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1743, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 998, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1399, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 12:29:53,365 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1392, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', 'Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, \'server_hello\'), data=Container(legacy_version=b\'\\x03\\x03\', random=b\'\\x13\\x9d\\xf33\\xa1\\xc7\\x0b\\x8c\\x16{\\x1en\\x92Rr\\xab\\xdf\\x07\\xd86\\xd9\\xffHH\\x1ef\\x88\\x07\\xb0}\\x89\\xf9\', cipher_suite=uEnumIntegerString.new(b\'\\x13\\x01\', \'TLS_AES_128_GCM_SHA256\'), legacy_compression_method=b\'\\x00\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')]))), Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, \'supported_groups\'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b\'\\x00\\x17\', \'secp256r1\'), EnumIntegerString.new(b\'\\x00\\x18\', \'secp384r1\'), EnumIntegerString.new(b\'\\x00\\x1d\', \'x25519\'), EnumIntegerString.new(b\'\\x00\\x1e\', \'x448\')]))), Container(extension_type=uEnumIntegerString.new(41, \'pre_shared_key\'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, \'key_share\'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b\'\\x00\\x1e\', \'x448\'), key_exchange=b"\\xfc\\xae_<\\x01\\xceo\\x95\\x8c\\xf6\\x89E\'P\\x8b\\x81\\x1a\\xd55\\xf7}\\x7f\\xac\\xe1P\\x9b[\\x10\\x0f\\xdbV\\x89\\x8f!\\xbd~\\xe066!a\\xd5\\xdb\\xd7>\\xe6W\\xc9o\\x90\\x8d\\xbfE\\xbb\\x1d\\xd9")))]))), Container(msg_type=uEnumIntegerString.new(8, \'encrypted_extensions\'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))]))), Container(msg_type=uEnumIntegerString.new(13, \'certificate_request\'), data=Container(certificate_request_context=b\'\\x00\\x01\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))])))]')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2503, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1832, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1745, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 998, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1401, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 12:30:34,403 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1393, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', 'Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, \'server_hello\'), data=Container(legacy_version=b\'\\x03\\x03\', random=b\'\\xd3\\xaf\\x99,\\x022D\\xa4\\xb4\\x1cDN\\xe5p\\xea>\\x8e\\x88\\xbc1."\\xf7\\x92\\xe1$\\xab2\\x9c/2\\xb2\', cipher_suite=uEnumIntegerString.new(b\'\\x13\\x01\', \'TLS_AES_128_GCM_SHA256\'), legacy_compression_method=b\'\\x00\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')]))), Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, \'supported_groups\'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b\'\\x00\\x17\', \'secp256r1\'), EnumIntegerString.new(b\'\\x00\\x18\', \'secp384r1\'), EnumIntegerString.new(b\'\\x00\\x1d\', \'x25519\'), EnumIntegerString.new(b\'\\x00\\x1e\', \'x448\')]))), Container(extension_type=uEnumIntegerString.new(41, \'pre_shared_key\'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, \'key_share\'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b\'\\x00\\x1e\', \'x448\'), key_exchange=b\'$UiDnJ\\x05\\xd3\\xbf\\xad\\x81\\xf1*~\\xa6J\\x83\\xd9&G^N%\\x08yc\\xe6\\xc2\\x19E1\\xcd\\x9ay\\x15p\\xc2\\xcf\\xd2\\xe9\\xb3\\x99\\n\\xa8\\xc1\\xe5\\xec.\\x82\\xe1\\x9e\\xd6\\xc7\\x0e\\xcd\\x8a\')))]))), Container(msg_type=uEnumIntegerString.new(8, \'encrypted_extensions\'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))]))), Container(msg_type=uEnumIntegerString.new(13, \'certificate_request\'), data=Container(certificate_request_context=b\'\\x00\\x01\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))])))]')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2504, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1833, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1746, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 998, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1402, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 12:31:24,397 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1393, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', 'Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, \'server_hello\'), data=Container(legacy_version=b\'\\x03\\x03\', random=b\'\\xb8\\x8ekc\\x7f\\x9b\\xd0)\\xf1\\x0f\\xce{\\xb4`\\xff\\x15\\x97\\x82\\x05C\\x92\\xe8\\xba\\x9a(\\x8cm\\xbd\\xec\\x9f\\n4\', cipher_suite=uEnumIntegerString.new(b\'\\x13\\x01\', \'TLS_AES_128_GCM_SHA256\'), legacy_compression_method=b\'\\x00\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')]))), Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, \'supported_groups\'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b\'\\x00\\x17\', \'secp256r1\'), EnumIntegerString.new(b\'\\x00\\x18\', \'secp384r1\'), EnumIntegerString.new(b\'\\x00\\x1d\', \'x25519\'), EnumIntegerString.new(b\'\\x00\\x1e\', \'x448\')]))), Container(extension_type=uEnumIntegerString.new(41, \'pre_shared_key\'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, \'key_share\'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b\'\\x00\\x1e\', \'x448\'), key_exchange=b\'"\\x8dK\\x92\\xf0w\\xcbw\\xed\\x8c\\xf6\\xc2|\\t\\x9a\\x02\\x92\\xd22IAJ\\xad\\x82t^t*\\x8d\\\'E\\xfa\\x84\\x96V,\\xf61\\xe1\\x06\\xadH\\\\p\\x8c\\x1f\\xf7\\xd7g\\xa0\\xc2\\xd4X\\x9d\\x00\\x0e\')))]))), Container(msg_type=uEnumIntegerString.new(8, \'encrypted_extensions\'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))]))), Container(msg_type=uEnumIntegerString.new(13, \'certificate_request\'), data=Container(certificate_request_context=b\'\\x00\\x01\', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, \'post_handshake_auth\'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, \'signature_algorithms\'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b\'\\x04\\x01\', \'rsa_pkcs1_sha256\'), EnumIntegerString.new(b\'\\x05\\x01\', \'rsa_pkcs1_sha384\'), EnumIntegerString.new(b\'\\x04\\x03\', \'ecdsa_secp256r1_sha256\'), EnumIntegerString.new(b\'\\x05\\x03\', \'ecdsa_secp384r1_sha384\'), EnumIntegerString.new(b\'\\x08\\x07\', \'ed25519\'), EnumIntegerString.new(b\'\\x08\\x08\', \'ed448\')]))), Container(extension_type=uEnumIntegerString.new(45, \'psk_key_exchange_modes\'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, \'psk_ke\'), EnumIntegerString.new(1, \'psk_dhe_ke\')])))])))]')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2504, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1833, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1746, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 998, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1402, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 13:00:35,096 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1403, in get_ticket
    ch_index = self.latest_client_hello_index( )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 877, in latest_client_hello_index
    raise LURKError( 'invalid_handshake', f"Expecting client hello"\
lurk_lurk.LURKError: ('invalid_handshake', "Expecting client hello in first message [Container(msg_type=uEnumIntegerString.new(2, 'server_hello'), data=Container(legacy_version=b'\\x03\\x03', random=b'J\\x96[\\xb1N\\x0f\\x16k\\x87\\x98N7\\xe1\\xda\\xcd2\\x94\\xe9\\x0e/V\\xb0\\xa3;\\x082J\\x0c\\x83+\\xf0\\xfc', cipher_suite=uEnumIntegerString.new(b'\\x13\\x01', 'TLS_AES_128_GCM_SHA256'), legacy_compression_method=b'\\x00', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')]))), Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(10, 'supported_groups'), extension_data=Container(named_group_list=ListContainer([EnumIntegerString.new(b'\\x00\\x17', 'secp256r1'), EnumIntegerString.new(b'\\x00\\x18', 'secp384r1'), EnumIntegerString.new(b'\\x00\\x1d', 'x25519'), EnumIntegerString.new(b'\\x00\\x1e', 'x448')]))), Container(extension_type=uEnumIntegerString.new(41, 'pre_shared_key'), extension_data=0), Container(extension_type=uEnumIntegerString.new(51, 'key_share'), extension_data=Container(server_share=Container(group=uEnumIntegerString.new(b'\\x00\\x1e', 'x448'), key_exchange=b'\\xb9\\xee\\xfd\\xeeV\\x99]\\x9fC\\xba\\xae\\xe6\\xc9\\xbe\\xdb\\x06A\\x0eB\\x04\\x90\\x81j\\xd0\\xdc\\xcaT\\x9d\\xc1\\xf3\\xd3(\\x8b\\x07V\\x19\\xc6c\\x04\\x1d\\xce\\x8a\\xf3\\x08J1#\\xd8`\\\\`\\xef\\xe1-\\xf8\\x11')))]))), Container(msg_type=uEnumIntegerString.new(8, 'encrypted_extensions'), data=Container(extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))]))), Container(msg_type=uEnumIntegerString.new(13, 'certificate_request'), data=Container(certificate_request_context=b'\\x00\\x01', extensions=ListContainer([Container(extension_type=uEnumIntegerString.new(49, 'post_handshake_auth'), extension_data=Container()), Container(extension_type=uEnumIntegerString.new(13, 'signature_algorithms'), extension_data=Container(supported_signature_algorithms=ListContainer([EnumIntegerString.new(b'\\x04\\x01', 'rsa_pkcs1_sha256'), EnumIntegerString.new(b'\\x05\\x01', 'rsa_pkcs1_sha384'), EnumIntegerString.new(b'\\x04\\x03', 'ecdsa_secp256r1_sha256'), EnumIntegerString.new(b'\\x05\\x03', 'ecdsa_secp384r1_sha384'), EnumIntegerString.new(b'\\x08\\x07', 'ed25519'), EnumIntegerString.new(b'\\x08\\x08', 'ed448')]))), Container(extension_type=uEnumIntegerString.new(45, 'psk_key_exchange_modes'), extension_data=Container(ke_modes=ListContainer([EnumIntegerString.new(0, 'psk_ke'), EnumIntegerString.new(1, 'psk_dhe_ke')])))])))]")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2515, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1844, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1757, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1008, in is_compatible_with
    selected_ticket = self.get_ticket( selected_identity )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1413, in get_ticket
    raise LURKError('invalid_handshake', f"unable to get psk_identity  "\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 13:47:25,429 : lurk.py:73 -                serve() ] 'cipher_suite'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2535, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1864, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1777, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1011, in is_compatible_with
    if self.msg_list[ 0 ][ 'cipher_suite' ] != session_ticket.cipher:
KeyError: 'cipher_suite'
[2022-02-03 13:48:31,727 : lurk.py:73 -                serve() ] 'cipher_suite'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2536, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1865, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1778, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1012, in is_compatible_with
    if self.msg_list[ 0 ][ 'cipher_suite' ] != session_ticket.cipher:
KeyError: 'cipher_suite'
[2022-02-03 13:49:29,349 : lurk.py:73 -                serve() ] 'cipher_suite'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2537, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1866, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1779, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1013, in is_compatible_with
    if self.msg_list[ 0 ][ 'cipher_suite' ] != session_ticket.cipher:
KeyError: 'cipher_suite'
[2022-02-03 13:50:02,935 : lurk.py:73 -                serve() ] 'cipher_suite'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2538, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1867, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1780, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1014, in is_compatible_with
    if self.msg_list[ 0 ][ 'cipher_suite' ] != session_ticket.cipher:
KeyError: 'cipher_suite'
[2022-02-03 13:50:55,404 : lurk.py:73 -                serve() ] 'cipher_suite'
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2540, in payload_resp
    payload = session.serve( req_payload, req_type, 'request' )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1869, in serve
    req = SHandAndAppSecretReq( payload, self.conf, self.handshake,\
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1782, in __init__
    self.handshake.is_compatible_with( self.mtype, session_ticket=session_ticket )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1014, in is_compatible_with
    print(self.msg_list[ 0 ][ 'cipher_suite' ])
KeyError: 'cipher_suite'
[2022-02-03 15:36:12,479 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2561, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1895, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1776, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 686, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 826, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 754, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:18:56,517 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2564, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1898, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1777, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 686, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 826, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 754, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:20:55,296 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2565, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1899, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1778, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 686, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 827, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 755, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:21:47,652 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2564, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1898, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1777, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 686, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 826, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 754, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:22:18,182 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2565, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1899, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1778, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 687, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 827, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 755, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:28:00,235 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2565, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1899, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1778, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 687, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 827, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 755, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:31:11,971 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2567, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1901, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1780, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 689, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 829, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 757, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:35:37,801 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2567, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1901, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1780, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 689, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 829, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 757, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 16:36:21,460 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2567, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1901, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1780, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 689, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 829, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 757, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 19:01:15,925 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2562, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1896, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1775, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 684, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 824, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 752, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
[2022-02-03 19:01:56,812 : lurk.py:73 -                serve() ] 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk.py", line 59, in serve
    payload = self.tls13.payload_resp( req )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 2563, in payload_resp
    payload  = session.serve( req_payload, req_type, 'request')
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1897, in serve
    req = SInitEarlySecretReq( payload, self.conf )
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 1776, in __init__
    self.secret_request = SecretReq(req[ 'secret_request' ], \
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 685, in __init__
    if handshake.has_extension( 'client_hello', 'early_data' ):
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 825, in has_extension
    msg_exts = self.msg( msg_type )['extensions']
  File "/home/emigdan/gitlab/pylurk.git/src/pylurk/lurk_tls13.py", line 753, in msg
    msg = self.msg_list[self.msg_i( msg_type)[ ith ] ][ 'data' ]
TypeError: 'NoneType' object is not subscriptable
