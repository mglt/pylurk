# Python3 manifest example

## the libOS
## There is currenlty no other choices than using libsysdb.so
loader.entrypoint = "file:{{ gramine.libos }}"
## the target application. 
## In our case the target application is the python 
## interpreter.
## The entry point variable is defined in the Makefile
## and is set to /usr/bin/python3.10
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "{{ log_level }}"

##  arch_libdir is provided by the Makefile
## in our case it is set to /lib/x86_64-linux-gnu/
loader.env.LD_LIBRARY_PATH = "{{ python.stdlib }}/lib:/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"

loader.insecure__use_cmdline_argv = true
## We extended the memory size used by gramine
## This error only appears recently so, maybe 
## this may not be needed
loader.pal_internal_mem_size = "64M"

sys.enable_sigterm_injection = true


## -- arch_libdir = /lib/x86_64-linux-gnu/
##
## From [Python doc](https://docs.python.org/3/library/sysconfig.html) 
## stdlib is a directory containing the standard Python 
## library files that are not platform-specific.
## locally running  `python3 -m sysconfig` provides the 
## following files (see below), so in our case:
## -- python.stdlib = /usr/lib/python3.10
##
## Platform: "linux-x86_64"
## Python version: "3.10"
## Current installation scheme: "posix_local"
##
## Paths: 
##        data = "/usr/local"
##        include = "/usr/include/python3.10"
##        platinclude = "/usr/include/python3.10"
##        platlib = "/usr/local/lib/python3.10/dist-packages"
##        platstdlib = "/usr/lib/python3.10"
##        purelib = "/usr/local/lib/python3.10/dist-packages"
##        scripts = "/usr/local/bin"
##        stdlib = "/usr/lib/python3.10"
##
## From [gramine doc](https://gramine.readthedocs.io/en/stable/manpages/gramine-manifest.html#gramine-manifest):
## -- distlib = /usr/lib/python3/dist-packages 
##
## modules imported with  pip3 are stored in 
## /home/mglt/.local/lib/python3.10/site-packages/
## these modules are under 
fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },
  { path = "{{ python.stdlib }}", uri = "file:{{ python.stdlib }}" },
  { path = "{{ python.distlib }}", uri = "file:{{ python.distlib }}" },
  ## adding our specific paths
  { path = "/home/mglt/gitlab", uri = "file:/home/mglt/gitlab/" },
  { path = "/home/mglt/.local/lib/python3.10/site-packages", uri = "file:/home/mglt/.local/lib/python3.10/site-packages" },
  { path = "/etc", uri = "file:/etc" },

  { type = "tmpfs", path = "/tmp" },
]

sys.stack.size = "2M"
sys.enable_extra_runtime_domain_names_conf = true

sgx.debug = true
sgx.nonpie_binary = true
sgx.enclave_size = "512M"
sgx.thread_num = 32

sgx.remote_attestation = "{{ ra_type }}"
sgx.ra_client_spid = "{{ ra_client_spid }}"
sgx.ra_client_linkable = {{ 'true' if ra_client_linkable == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ python.stdlib }}/",
  "file:{{ python.distlib }}/", ## /usr/lib/python3/dist-packages
  ## adding our specific paths
  "file:/home/mglt/gitlab/pytls13/src/pytls13/",
  "file:/home/mglt/gitlab/pylurk.git/src/pylurk/",
  "file:/home/mglt/.local/lib/python3.10/site-packages/",
#  "file:scripts/",
  "file:start_cs.py",
  "file:sig_key_dir/",
  "file:./crypto_service.log",
  "file:illustrated_tls13.json",
  "file:/etc/mime.types",
  "file:/etc/default/apport",
]

sgx.allowed_files = [
  "file:/etc/nsswitch.conf",
  "file:/etc/ethers",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/gai.conf",
  "file:/etc/host.conf",
]
